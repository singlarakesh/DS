package Graph;

import java.util.LinkedList;
import java.util.Queue;

public class FloodFill {

	public static void main(String[] args) {
		int images[][] = { { 1, 1, 1 }, { 1, 1, 0 }, { 1, 0, 1 } };
		int sr = 1, sc = 1;
		floodFill(images, sr, sc, 2);
	}

	public static int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
		int dp[][] = new int[image.length][image[0].length];
		for (int i = 0; i < image.length; i++) {
			for (int j = 0; j < image[0].length; j++) {
			}
		}
	}

	public static boolean isValid(int[][] image, int i, int j, int val, boolean visited[][]) {
//		if (i >= 0 && j >= 0 && i < image.length && j < image[0].length && image[i][j] == val && !visited[i][j]) {
//			return true;
//		}
//		return false;
	}
}
