package LeetCode;

public class HouseRobber {
	public static void main(String[] args) {
		int nums[] = { 1, 2, 3, 1 };
		int capacity = 4;
		int dp[] = new int[nums.length];
		System.out.println(moneyToRob(nums, 0, dp));
//		using tabulation
		System.out.println(moneyToRob(nums));
	}

	private static char[] moneyToRob(int[] nums) {
		// TODO Auto-generated method stub
		int dp[]=new int[nums.length];
		dp[0]=nums[0];
		dp[1]=nums[1];
		for(int i=2;i<nums.length;i++) {
			dp[i]=nums[i]+nums[i-2];
		}
		int max=Integer.MIN_VALUE;
		for(int i=0;i<dp.length;i++) {
			if(dp[i]>max) {
				max=dp[i];
			}
		}
		return max;
	}

	private static int moneyToRob(int[] nums, int i, int[] dp) {
		// TODO Auto-generated method stub
		if (i >= nums.length) {
			return 0;
		}
		if (dp[i] != 0) {
			return dp[i];
		}
		dp[i] = Math.max(moneyToRob(nums, i + 2, dp) + nums[i], moneyToRob(nums, i + 1, dp));
		return dp[i];

	}
}
