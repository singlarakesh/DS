import java.util.Scanner;

public class MergeSort {
	public static void main(String[] args) {
		Scanner scr = new Scanner(System.in);
		int n = scr.nextInt();
		int ar[] = new int[n];
		for (int i = 0; i < ar.length; i++) {
			ar[i] = scr.nextInt();
		}
		sort(ar, 0, ar.length - 1);
	}

	private static void sort(int[] a, int start, int j) {
		// TODO Auto-generated method stub
		a[0] = 1;
		for (int i = 0; i < a.length; i++) {
			System.out.println(a[i]);
		}
	}

//	// Merges two subarrays of arr[].
//	// First subarray is arr[l..m]
//	// Second subarray is arr[m+1..r]
//	public static void merge(int arr[], int l, int m, int r) {
//		// Find sizes of two subarrays to be merged
//		int n1 = m - l + 1;
//		int n2 = r - m;
//
//		/* Create temp arrays */
//		int L[] = new int[n1];
//		int R[] = new int[n2];
//
//		/* Copy data to temp arrays */
//		for (int i = 0; i < n1; ++i)
//			L[i] = arr[l + i];
//		for (int j = 0; j < n2; ++j)
//			R[j] = arr[m + 1 + j];
//
//		/* Merge the temp arrays */
//
//		// Initial indexes of first and second subarrays
//		int i = 0, j = 0;
//
//		// Initial index of merged subarry array
//		int k = l;
//		while (i < n1 && j < n2) {
//			if (L[i] <= R[j]) {
//				arr[k] = L[i];
//				i++;
//			} else {
//				arr[k] = R[j];
//				j++;
//			}
//			k++;
//		}
//
//		/* Copy remaining elements of L[] if any */
//		while (i < n1) {
//			arr[k] = L[i];
//			i++;
//			k++;
//		}
//
//		/* Copy remaining elements of R[] if any */
//		while (j < n2) {
//			arr[k] = R[j];
//			j++;
//			k++;
//		}
//	}
//
//	// Main function that sorts arr[l..r] using
//	// merge()
//	public static void sort(int arr[], int l, int r) {
//		if (l < r) {
//			// Find the middle point
//			int m = l + (r - l) / 2;
//
//			// Sort first and second halves
//			sort(arr, l, m);
//			sort(arr, m + 1, r);
//
//			// Merge the sorted halves
//			merge(arr, l, m, r);
//		}
//	}
//
//	/* A utility function to print array of size n */
//	static void printArray(int arr[]) {
//		int n = arr.length;
//		for (int i = 0; i < n; ++i)
//			System.out.print(arr[i] + " ");
//		System.out.println();
//	}

}