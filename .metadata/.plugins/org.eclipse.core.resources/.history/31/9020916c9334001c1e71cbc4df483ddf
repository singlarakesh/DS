package Amazon;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Stack;

class Interval {
	int start, end;

	@Override
	public String toString() {
		return "Interval [start=" + start + ", end=" + end + "]";
	}

	Interval(int start, int end) {
		this.start = start;
		this.end = end;
	}
}

public class MergeIntervals {
	public static void main(String[] args) {
		Interval ar[] = new Interval[4];
		ar[0] = new Interval(6, 8);
		ar[1] = new Interval(1, 9);
		ar[2] = new Interval(2, 4);
		ar[3] = new Interval(4, 7);
		MergeIntervals(ar);
	}

	private static void MergeIntervals(Interval[] ar) {
		// TODO Auto-generated method stub
		Comparator<Interval> compare = (a, b) -> a.start - b.start;
		Arrays.sort(ar, compare);
		Stack<Interval> s=new Stack<>();
		s.push(ar[0]);
		for (int i = 1; i < ar.length; i++) {
			Interval top=s.peek();
			if(top.end<ar[i].start) {
				s.push(ar[i]);
			}else if(top.end<ar[i].end){
					top.end=ar[i].end;
					s.pop();
					s.add(top);
			}
		}
	    System.out.print("The Merged Intervals are: ");
        while (!s.isEmpty())
        {
            Interval t = s.pop();
            System.out.print("["+t.start+","+t.end+"] ");
        } 
	}
}
